name: PR Check

on:
  pull_request:
    branches: [ develop ]

env:
  GO_VERSION: '1.21'

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-multilib libc6-dev
    
    - name: Download Go modules
      run: make deps
    
    - name: Format check
      run: |
        # Save current state
        git status --porcelain > /tmp/before_fmt
        
        # Run go fmt
        go fmt ./...
        
        # Check if anything changed
        git status --porcelain > /tmp/after_fmt
        
        if ! diff -q /tmp/before_fmt /tmp/after_fmt > /dev/null; then
          echo "Code is not formatted. Please run 'make fmt' locally and commit the changes."
          echo "Files that were changed by go fmt:"
          git diff --name-only
          echo ""
          echo "Diff:"
          git diff
          exit 1
        fi
        echo "Code is properly formatted"
    
    - name: Vet
      run: make vet
    
    - name: Build test
      run: |
        make build
        make build-lib

  python-test:
    name: Python Integration Test
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-multilib libc6-dev
    
    - name: Download Go modules
      run: make deps
    
    - name: Get version from Makefile
      id: version
      run: |
        VERSION=$(make -s print-version)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Run Python tests
      env:
        VERSION: ${{ steps.version.outputs.version }}
      run: make test